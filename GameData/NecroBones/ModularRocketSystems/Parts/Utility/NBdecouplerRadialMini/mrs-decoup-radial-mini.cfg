// mrs-decoup-radial-mini.cfg v1.3.99.0
// Modular Rocket Systems (MRS)
// created: 29 Aug 2014
// updated: 01 Mar 2023

// this file: CC BY-SA 4.0 by:
//  [NecroBones](http://github.com/NecroBones) and 
//  [zer0Kerbal](http://github.com/zer0Kerbal)

PART
{
	name = mrs-decoup-radial-mini
	oldName = NBdecouplerRadialMini
	module = Part
	author = NecroBones and zer0Kerbal

mesh = model.mu
	// MODEL { model = NecroBones/ModularRocketSystems/Assets/ }
	scale = 1.0
	rescaleFactor = 1.0
	bulkheadProfiles = srf


attachRules = 0,1,0,1,0
node_attach = 0.0, 0.0, 0.0, 1.0, 0.0, 0.0


fx_gasBurst_white = 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, decouple
sound_vent_large = decouple


TechRequired = stability
entryCost = 900
cost = 300
category = Coupling
subcategory = 0
	title = #MRS-NBdecouplerRadialMini-titl
	manufacturer = #MRS-titl
	description = #MRS-NBdecouplerRadialMini-desc
	tags = #autoLOC_500834 // break decouple separat split stack stag


mass = 0.015
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 1
crashTolerance = 8
maxTemp = 2000
stagingIcon = DECOUPLER_HOR
fuelCrossFeed = False

stageOffset = 1
childStageOffset = 1


MODULE
{
    name = ModuleAnchoredDecoupler
    anchorName = anchor
    ejectionForce = 100
	explosiveNodeID = srf
}
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}


}
